[
  {
    "objectID": "presemi2024.html",
    "href": "presemi2024.html",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "令和6年度(2024年度)の松浦プレゼミでは、データに強い経営学部生となるため、データ分析のツールとしてもはやデファクトスタンダードとなっている(いいすぎ)プログラミング言語Rを使って、様々な分析を行うためのスキルの修得を目指します。\n株価データや会計データ、POSデータといったデータベース以外にも、自分で集めたアンケートのデータや、Webスクレイピングで集めたデータなど、様々なデータを分析することができるスキルは、会計・ファイナンスだけでなく、組織、戦略、マーケティングと様々な分野で役に立つはずです。\nまたRで分析した結果をレポートにまとめる際に有用なツールとして、Quartoを勉強します。 Quarto(クアルト)とは、Markdown記法で書かれた文章の中に、RだけでなくPythonなど他の言語も組み込める便利なツールです。\n\n\n\nRを使う理由を、メリットとデメリットを比較しながら以下で説明します。\n\n\nデータ分析のツールとして大学で使うことが多いのはMS Excelですが，MS Excelは表計算ソフトウェアであり，統計分析を行うこともできますが，データ分析界ではほとんど使われません。データアナリストが利用しているプログラミング言語として主要なものは，Python(パイソン)，Julia(ジュリア)，そしてR(アール)です。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nぜんぶ無料\n学習しやすい・教材たくさん\n作業履歴が残る\n卒業後も使える\n大規模データもさくさく扱える。\nなんかかっこいい\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\nいろいろインストールしたり，設定が必要\n命令文でデータを操作するのでぱっと見わかりにくい。\nR言語の文法と単語を覚えなきゃいけない\nキーボード入力が多いので，タッチタイピング必須\n\n\n\n\n\n\n\n\n\nマイクロソフト社の表計算ソフト「Excel」は非常に便利だけれど，データ分析のツールとしては以下のようなデメリットがあります。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nみんな使ってるし，就職しても使いそう\n画面の表示が理解しやすい\nマウスでポチポチしているとグラフや表が作れてしまう。\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\n有料 (在学中は無料で利用可能)\nマウスで何度もポチポチしないといけない\n過去のExcelファイルを見ても何をしたのか思い出せない\nExcelは大きなデータは扱えない\nアプリが重い、すぐ強制終了する\nグラフのデザインが悪い\n\n\n\n\n\n\n\n\n\nRユーザーが使うことが多いRstudioを開発したPosit社が提供する、R Markdownをさらに進化させたQuartoを使うメリットは以下の通りです。\n\n\nMS Wordのように、書いた文章がそのまま印刷されるようなWYSIWYG(What You See Is What You Get)なワープロソフトとは異なり、特定の記法にしたがって書かれた文章をコンピューターで処理することで印刷用の文書に変換するWYSIWYM(What You See Is What You Mean)な文書処理システムをマークアップ言語といいます。Markdownが代表的なマークアップ言語で、そこにRを組み込んだR Markdownが広く利用されています。そのR Markdownをさらに進化させて、文書内でRやPython, Juliaなどのコードを実行できるようにしたのがQuartoです。 マークアップ言語はWYSIWYM(What You See Is What You Mean)といい、コンパイルして完成品を確認するまで、どのように表示されるのかは分かりませんが、記法に従って書けば、最終的にはきれいなレポートができあがります。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nMarkdown形式で記述できるので、簡単に論文・レポートの体裁を整えられる\n文章作成とデータ分析を同じ場所で行える\n文章中にRだけでなくPythonやJuliaを組み込める\nレポートの再現性を高めることができる\nグラフや表のデザインがきれい\nなんかかっこいい\n無料\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\nMarkdown記法を覚えないといけない\n入力するものと出力されるものが違う。\nビジネスで利用される場面が少ない\n\n\n\n\n\n\n\n\n\nマイクロソフト社のワープロソフト「Word」は非常に便利でみんな使っているものだけれど、 データ分析の結果をレポートにまとめる際には以下のようなデメリットがあります。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nみんな使ってるし，就職しても使いそう\n(だいたい)入力通りに印刷される\n学習のための本や情報が多い\nもともとパソコンに入っていたりする\n日本語チェックができる\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\n有料 (在学中は無料で利用可能)\n箇条書きなどが勝手に設定され、整えるのに時間がかかる\nデータ分析の結果を貼り付けると、修正が面倒\nアプリケーションが重いし、長い文章を書くと強制終了する\n\n\n\n\n\n\n\n\n\n\n\n\n\nExcelでは扱えないかなり大きなデータでも簡単にデータ操作ができます。 たとえば、データ分析の練習用データとして有名なirisデータをいろいろ操作してみましょう。 irisは「あやめ」という花の花びらとがく片の長さと幅の4項目と3種類のあやめの分類名の1項目の合計5項目が150件収録されているデータベースです。Rには練習用に最初から入っているので、head()関数を使ってirisの先頭の6行を読み込んでみます。\n\nhead(iris) # 最初の6行だけ\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nこのように、Sepal.Length、Sepal.Width、Petal.Length、Petal.Width、Speciesという5つの項目が入っていることが分かります。Sepalは花びらで、Petalはがく片です。まず花びらの長さSepal.Lengthの平均を求めてみましょう。平均を返す関数はmean()です。\n\nmean(iris$Sepal.Length)\n\n[1] 5.843333\n\n\nあやめの花びらの長さの平均は、5.8433333であることが分かりました。簡単ですね。 では次に，あやめの花びらの長さの標準偏差を求めてみましょう。標準偏差を返す関数はsd()です。 下のボックスの緑の三角ボタンを押すと，Rコードが実行され，下に結果が表示されます。 sd()で標準偏差，max()で最大値，min()で最小値，median()で中央値を求めることができるので，sdのところを書き換えて実行し，結果を確認してみてください。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n次に、あやめの種類を表すSpeciesにはどんな種類があるのか見てみましょう。 Speciesに入っている種類を確認するには、table()関数を使ってみます。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nあやめの種類には、setosa、versicolor, virginicaがあり、それぞれ50個のデータがあることが分かります。\n次に、このirisを使って、グラフを作ってみます。\n\n\n\nでは次にグラフを作成してみます。 最初に、花びらの長さのヒストグラムを書いてみます。 さくっとヒストグラムを作るには，基本関数のhist()を使います。 ここでは，irisデータのSepal.Lengthを使ってヒストグラムを作成してみましょう。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nRはグラフ作成が得意なプログラミング言語です。 その機能を最大限活用するために，非常に簡単かつ分かりやすく美しいグラフを作成できるggplot2パッケージを導入します。\n\n# install.packages(\"ggplot2\") # 1回だけ実行\nlibrary(ggplot2)\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram()\nprint(g)\n\n\n\n\n\n\n\n\nヒストグラムの階級幅を変更したり、棒の数を変更するには、geom_histogram()の中で指定します。 例えば、階級幅を0.5でヒストグラムを作る場合は、binwidth = 0.5のように指定します。\n\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram(binwidth = 0.5)\nprint(g)\n\n\n\n\n\n\n\n\nグラフが黒くて見づらいので、デザインをいじってみます。 geom_histogram()関数の中で、線を黒、中を薄青色に指定します。\n\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram(color=\"black\", fill=\"lightblue\",binwidth = .5)\nprint(g)\n\n\n\n\n\n\n\n\n背景が地味なので、グラフを雑誌Economist風にしてみます。\n\ng + theme_economist_white() + scale_colour_economist()\n\n\n\n\n\n\n\n\n次は花びらの長さと幅の散布図を書いてみます。 ggplot2で散布図を書くためには、aes()でx軸とy軸を指定し、geom_point()で散布図を指定する。\n\nggplot(iris) + aes(x = Sepal.Length, y = Sepal.Width) +\n geom_point() + theme_economist()\n\n\n\n\n\n\n\n\nカテゴリーを表す変数をgroupとcolourで指定すると、カテゴリーごとにグループ化して、色分けもしてくれます。ここでは花の種類を表す変数であるSpeciesごとに色分けしてみます。\n\ng &lt;- ggplot(iris) + # データセットirisを指定\n  aes(x = Sepal.Length, # x軸 花びらの幅\n      y = Sepal.Width, # y軸　花びらの幅\n      color = Species # あやめの種類ごとに色分け\n      ) +\n      geom_point() + # 散布図を指定\n      theme_economist() # テーマをEconomistに\nprint(g)\n\n\n\n\n\n\n\n\n操作できるグラフも作れます。 plotlyパッケージを使えば簡単です。\n\nlibrary(plotly)\nggplotly(g)\n\n\n\n\n\n\n\n\nデータを分析した結果を表や図としてレポートや論文に載せる場合、MS Excelで作成した図や表を、MS Wordにコピペしてませんか？ その場合、Wordで書いてたレポートの図表に少し修正を加えることになると、またExcelを開いて修正し、またコピペしたりしてませんか？ これはミスの元ですし、レポートを2週間後に読んだとして、その図表を作成したExcelがどこにあるのか、またどうやって作ったのか思い出せますか？ Rなら心配いりません。\nQuartoやRmarkdownを使ってMarkdownでレポートを書けば、文章作成と図表を同じ場所で作成できます。 ちなみに、このウェブサイトもQuartoを使って作成し、GitHubでウェブサイト公開してます。 さらにプレゼン資料も簡単に作れます。\n例えば、先ほどから使っているirisデータで、\n\n「あやめ」の種類ごとに、\n花びらの長さと幅の平均、中央値、標準偏差を計算し、\nそれを表にする，\n\nという処理を行いたいとしましょう。 簡単です。Rならね。\n\niris %&gt;%\n  dplyr::group_by(Species) %&gt;% # あやめの種類ごとに\n  dplyr::summarise( # 以下の統計量を計算\n    花びらの長さの平均 = mean(Sepal.Length),\n    花びらの幅の平均 = mean(Sepal.Width),\n    花びらの標準偏差 = sd(Sepal.Width)\n  ) %&gt;%\n  knitr::kable(booktabs = TRUE)\n\n\n\n\nSpecies\n花びらの長さの平均\n花びらの幅の平均\n花びらの標準偏差\n\n\n\n\nsetosa\n5.006\n3.428\n0.3790644\n\n\nversicolor\n5.936\n2.770\n0.3137983\n\n\nvirginica\n6.588\n2.974\n0.3224966\n\n\n\n\n\nたとえば、あやめのがく片の長さが長いほど、花びらが長くなるかどうかを分析しようと回帰分析を行いたいとします。 つまり以下のような回帰モデルを考えます（数式もこんなにキレイに書けます）。 \nSepal.Length = \\alpha + \\beta \\times Petal.Length + \\varepsilon\n\nこの回帰モデルを最小二乗法(Ordinary Least Square Methos)で推定した結果を表にするときも次のように書けばできます。\n\nlibrary(gtsummary)\nlm_fit &lt;- lm(Sepal.Length ~ Petal.Length, data = iris)\ntbl_regression(lm_fit,\n               type = \"html\",\n               title = \"Regression Results\",\n               exponentiate = FALSE,\n               digits = list(all_continuous() ~ 2),\n               add_estimate_to_reference_rows = TRUE,\n               bold_p = TRUE)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\nPetal.Length\n0.41\n0.37, 0.45\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n他にもこんな感じにできます。\n\nlibrary(kableExtra)\nlibrary(broom)\nlm_fit %&gt;%\n  tidy() %&gt;%\n  kable(\n      caption = \"Regression Results\",\n      booktabs = TRUE,\n      digits = c(2, 2, 2, 2)) %&gt;%\n  kable_styling(full_width = FALSE) %&gt;%\n  column_spec(1, bold = TRUE) %&gt;%\n  row_spec(0, bold = TRUE, color = \"white\", background = \"#0073C2\")\n\n\nRegression Results\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n4.31\n0.08\n54.94\n0\n\n\nPetal.Length\n0.41\n0.02\n21.65\n0\n\n\n\n\n\n\n\nあやめのがく片の長さと花びらが長さをグラフにし，そこに上で求めた回帰直線を引いてみます。\n\nggplot(iris, aes(x = Petal.Length, y = Sepal.Length)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_economist_white()\n\n\n\n\n\n\n\n\n上記の結果から，がく片が1センチ長くなると，花びらの長さが約4.1ミリ長くなることがわかります。 このように、Rを使えば、データの操作から分析、結果の表や図の作成まで、一連の作業を一カ所で行うことができます。\n\n\n\n\nつまり、経営学の知識、統計学の知識、それにRの知識を組み合わせれば、経営学で学んだ理論を使って仮説を考え、その仮説を検証するために必要なデータを集め、適切な統計分析手法を使い、その結果をまとめてレポート・論文にする一連のプロセスを、一カ所にまとめることができます。 さあ、Rを勉強して、統計分析と効率的なレポート・論文作成のスキルを身につけましょう。"
  },
  {
    "objectID": "presemi2024.html#なぜrquarto",
    "href": "presemi2024.html#なぜrquarto",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "なぜRやQuartoを使うのか。その理由をメリットとデメリットを比較しながら以下で説明します。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nぜんぶ無料\n学習しやすい・教材たくさん\n作業履歴が残る\n卒業後も使える\n大規模データもさくさく扱える。\nなんかかっこいい\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\nいろいろインストールしたり，設定が必要\n命令文でデータを操作するのでぱっと見わかりにくい。\nR言語の文法と単語を覚えなきゃいけない\nキーボード入力が多いので，タッチタイピング必須"
  },
  {
    "objectID": "presemi2024.html#ms-excelだとダメなの",
    "href": "presemi2024.html#ms-excelだとダメなの",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "マイクロソフト社の表計算ソフト「Excel」は非常に便利だけれど，データ分析のツールとしては以下のようなデメリットがあります。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nみんな使ってるし，就職しても使いそう\n画面の表示が理解しやすい\nマウスでポチポチしているとグラフや表が作れてしまう。\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\n有料 (在学中は無料で利用可能)\nマウスで何度もポチポチしないといけない\n過去のExcelファイルを見ても何をしたのか思い出せない\nExcelは大きなデータは扱えない\nアプリが重い、すぐ強制終了する\nグラフのデザインが悪い"
  },
  {
    "objectID": "presemi2024.html#rでどんなことができる",
    "href": "presemi2024.html#rでどんなことができる",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "Excelでは扱えないかなり大きなデータでも簡単にデータ操作ができます。 たとえば、データ分析の練習用データとして有名なirisデータをいろいろ操作してみましょう。 irisは「あやめ」という花の花びらとがく片の長さと幅の4項目と3種類のあやめの分類名の1項目の合計5項目が150件収録されているデータベースです。Rには練習用に最初から入っているので、head()関数を使ってirisの先頭の6行を読み込んでみます。\n\nhead(iris) # 最初の6行だけ\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nこのように、Sepal.Length、Sepal.Width、Petal.Length、Petal.Width、Speciesという5つの項目が入っていることが分かります。Sepalは花びらで、Petalはがく片です。まず花びらの長さSepal.Lengthの平均を求めてみましょう。平均を返す関数はmean()です。\n\nmean(iris$Sepal.Length)\n\n[1] 5.843333\n\n\nあやめの花びらの長さの平均は、5.8433333であることが分かりました。簡単ですね。 では次に，あやめの花びらの長さの標準偏差を求めてみましょう。標準偏差を返す関数はsd()です。 下のボックスの緑の三角ボタンを押すと，Rコードが実行され，下に結果が表示されます。 sd()で標準偏差，max()で最大値，min()で最小値，median()で中央値を求めることができるので，sdのところを書き換えて実行し，結果を確認してみてください。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n次に、あやめの種類を表すSpeciesにはどんな種類があるのか見てみましょう。 Speciesに入っている種類を確認するには、table()関数を使ってみます。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nあやめの種類には、setosa、versicolor, virginicaがあり、それぞれ50個のデータがあることが分かります。\n次に、このirisを使って、グラフを作ってみます。\n\n\n\nでは次にグラフを作成してみます。 最初に、花びらの長さのヒストグラムを書いてみます。 さくっとヒストグラムを作るには，基本関数のhist()を使います。 ここでは，irisデータのSepal.Lengthを使ってヒストグラムを作成してみましょう。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nRはグラフ作成が得意なプログラミング言語です。 その機能を最大限活用するために，非常に簡単かつ分かりやすく美しいグラフを作成できるggplot2パッケージを導入します。\n\n# install.packages(\"ggplot2\") # 1回だけ実行\nlibrary(ggplot2)\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram()\nprint(g)\n\n\n\n\n\n\n\n\nヒストグラムの階級幅を変更したり、棒の数を変更するには、geom_histogram()の中で指定します。 例えば、階級幅を0.5でヒストグラムを作る場合は、binwidth = 0.5のように指定します。\n\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram(binwidth = 0.5)\nprint(g)\n\n\n\n\n\n\n\n\nグラフが黒くて見づらいので、デザインをいじってみます。 geom_histogram()関数の中で、線を黒、中を薄青色に指定します。\n\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram(color=\"black\", fill=\"lightblue\",binwidth = .5)\nprint(g)\n\n\n\n\n\n\n\n\n背景が地味なので、グラフを雑誌Economist風にしてみます。\n\ng + theme_economist_white() + scale_colour_economist()\n\n\n\n\n\n\n\n\n次は花びらの長さと幅の散布図を書いてみます。 ggplot2で散布図を書くためには、aes()でx軸とy軸を指定し、geom_point()で散布図を指定する。\n\nggplot(iris) + aes(x = Sepal.Length, y = Sepal.Width) +\n geom_point() + theme_economist()\n\n\n\n\n\n\n\n\nカテゴリーを表す変数をgroupとcolourで指定すると、カテゴリーごとにグループ化して、色分けもしてくれます。ここでは花の種類を表す変数であるSpeciesごとに色分けしてみます。\n\ng &lt;- ggplot(iris) + # データセットirisを指定\n  aes(x = Sepal.Length, # x軸 花びらの幅\n      y = Sepal.Width, # y軸　花びらの幅\n      color = Species # あやめの種類ごとに色分け\n      ) +\n      geom_point() + # 散布図を指定\n      theme_economist() # テーマをEconomistに\nprint(g)\n\n\n\n\n\n\n\n\n操作できるグラフも作れます。 plotlyパッケージを使えば簡単です。\n\nlibrary(plotly)\nggplotly(g)\n\n\n\n\n\n\n\n\nデータを分析した結果を表や図としてレポートや論文に載せる場合、MS Excelで作成した図や表を、MS Wordにコピペしてませんか？ その場合、Wordで書いてたレポートの図表に少し修正を加えることになると、またExcelを開いて修正し、またコピペしたりしてませんか？ これはミスの元ですし、レポートを2週間後に読んだとして、その図表を作成したExcelがどこにあるのか、またどうやって作ったのか思い出せますか？ Rなら心配いりません。\nQuartoやRmarkdownを使ってMarkdownでレポートを書けば、文章作成と図表を同じ場所で作成できます。 ちなみに、このウェブサイトもQuartoを使って作成し、GitHubでウェブサイト公開してます。 さらにプレゼン資料も簡単に作れます。\n例えば、先ほどから使っているirisデータで、\n\n「あやめ」の種類ごとに、\n花びらの長さと幅の平均、中央値、標準偏差を計算し、\nそれを表にする，\n\nという処理を行いたいとしましょう。 簡単です。Rならね。\n\niris %&gt;%\n  dplyr::group_by(Species) %&gt;% # あやめの種類ごとに\n  dplyr::summarise( # 以下の統計量を計算\n    花びらの長さの平均 = mean(Sepal.Length),\n    花びらの幅の平均 = mean(Sepal.Width),\n    花びらの標準偏差 = sd(Sepal.Width)\n  ) %&gt;%\n  knitr::kable(booktabs = TRUE)\n\n\n\n\nSpecies\n花びらの長さの平均\n花びらの幅の平均\n花びらの標準偏差\n\n\n\n\nsetosa\n5.006\n3.428\n0.3790644\n\n\nversicolor\n5.936\n2.770\n0.3137983\n\n\nvirginica\n6.588\n2.974\n0.3224966\n\n\n\n\n\nたとえば、あやめのがく片の長さが長いほど、花びらが長くなるかどうかを分析しようと回帰分析を行いたいとします。 つまり以下のような回帰モデルを考えます（数式もこんなにキレイに書けます）。 \nSepal.Length = \\alpha + \\beta \\times Petal.Length + \\varepsilon\n\nこの回帰モデルを最小二乗法(Ordinary Least Square Methos)で推定した結果を表にするときも次のように書けばできます。\n\nlibrary(gtsummary)\nlm_fit &lt;- lm(Sepal.Length ~ Petal.Length, data = iris)\ntbl_regression(lm_fit,\n               type = \"html\",\n               title = \"Regression Results\",\n               exponentiate = FALSE,\n               digits = list(all_continuous() ~ 2),\n               add_estimate_to_reference_rows = TRUE,\n               bold_p = TRUE)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\nPetal.Length\n0.41\n0.37, 0.45\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n他にもこんな感じにできます。\n\nlibrary(kableExtra)\nlibrary(broom)\nlm_fit %&gt;%\n  tidy() %&gt;%\n  kable(\n      caption = \"Regression Results\",\n      booktabs = TRUE,\n      digits = c(2, 2, 2, 2)) %&gt;%\n  kable_styling(full_width = FALSE) %&gt;%\n  column_spec(1, bold = TRUE) %&gt;%\n  row_spec(0, bold = TRUE, color = \"white\", background = \"#0073C2\")\n\n\nRegression Results\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n4.31\n0.08\n54.94\n0\n\n\nPetal.Length\n0.41\n0.02\n21.65\n0\n\n\n\n\n\n\n\nあやめのがく片の長さと花びらが長さをグラフにし，そこに上で求めた回帰直線を引いてみます。\n\nggplot(iris, aes(x = Petal.Length, y = Sepal.Length)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_economist_white()\n\n\n\n\n\n\n\n\n上記の結果から，がく片が1センチ長くなると，花びらの長さが約4.1ミリ長くなることがわかります。 このように、Rを使えば、データの操作から分析、結果の表や図の作成まで、一連の作業を一カ所で行うことができます。"
  },
  {
    "objectID": "presemi2024.html#まとめ",
    "href": "presemi2024.html#まとめ",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "つまり、経営学の知識、統計学の知識、それにRの知識を組み合わせれば、経営学で学んだ理論を使って仮説を考え、その仮説を検証するために必要なデータを集め、適切な統計分析手法を使い、その結果をまとめてレポート・論文にする一連のプロセスを、一カ所にまとめることができます。 さあ、Rを勉強して、統計分析と効率的なレポート・論文作成のスキルを身につけましょう。"
  },
  {
    "objectID": "presemi2024.html#プレゼミとは",
    "href": "presemi2024.html#プレゼミとは",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "令和6年度(2024年度)の松浦プレゼミでは、データに強い経営学部生となるため、データ分析のツールとしてもはやデファクトスタンダードとなっている(いいすぎ)プログラミング言語Rを使って、様々な分析を行うためのスキルの修得を目指します。\n株価データや会計データ、POSデータといったデータベース以外にも、自分で集めたアンケートのデータや、Webスクレイピングで集めたデータなど、様々なデータを分析することができるスキルは、会計・ファイナンスだけでなく、組織、戦略、マーケティングと様々な分野で役に立つはずです。\nまたRで分析した結果をレポートにまとめる際に有用なツールとして、Quartoを勉強します。 Quarto(クアルト)とは、Markdown記法で書かれた文章の中に、RだけでなくPythonなど他の言語も組み込める便利なツールです。"
  },
  {
    "objectID": "presemi2024.html#なぜr",
    "href": "presemi2024.html#なぜr",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "なぜRを使うのか。その理由をメリットとデメリットを比較しながら以下で説明します。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nぜんぶ無料\n学習しやすい・教材たくさん\n作業履歴が残る\n卒業後も使える\n大規模データもさくさく扱える。\nなんかかっこいい\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\nいろいろインストールしたり，設定が必要\n命令文でデータを操作するのでぱっと見わかりにくい。\nR言語の文法と単語を覚えなきゃいけない\nキーボード入力が多いので，タッチタイピング必須"
  },
  {
    "objectID": "presemi2024.html#なぜquartoを使うのか",
    "href": "presemi2024.html#なぜquartoを使うのか",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "Rユーザーが使うことが多いRstudioを開発したPosit社が提供する、R Markdownをさらに進化させたQuartoを使うメリットは以下の通りです。\n\n\nMS Wordのように、書いた文章がそのまま印刷されるようなWYSIWYG(What You See Is What You Get)なワープロソフトとは異なり、特定の記法にしたがって書かれた文章をコンピューターで処理することで印刷用の文書に変換するWYSIWYM(What You See Is What You Mean)な文書処理システムをマークアップ言語といいます。Markdownが代表的なマークアップ言語で、そこにRを組み込んだR Markdownが広く利用されています。そのR Markdownをさらに進化させて、文書内でRやPython, Juliaなどのコードを実行できるようにしたのがQuartoです。 マークアップ言語はWYSIWYM(What You See Is What You Mean)といい、コンパイルして完成品を確認するまで、どのように表示されるのかは分かりませんが、記法に従って書けば、最終的にはきれいなレポートができあがります。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nMarkdown形式で記述できるので、簡単に論文・レポートの体裁を整えられる\n文章作成とデータ分析を同じ場所で行える\n文章中にRだけでなくPythonやJuliaを組み込める\nレポートの再現性を高めることができる\nグラフや表のデザインがきれい\nなんかかっこいい\n無料\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\nMarkdown記法を覚えないといけない\n入力するものと出力されるものが違う。\nビジネスで利用される場面が少ない"
  },
  {
    "objectID": "presemi2024.html#なぜms-wordだとダメなの",
    "href": "presemi2024.html#なぜms-wordだとダメなの",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "マイクロソフト社のワープロソフト「Word」は非常に便利でみんな使っているものだけれど、 データ分析の結果をレポートにまとめる際には以下のようなデメリットがあります。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nみんな使ってるし，就職しても使いそう\n(だいたい)入力通りに印刷される\n学習のための本や情報が多い\nもともとパソコンに入っていたりする\n日本語チェックができる\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\n有料 (在学中は無料で利用可能)\n箇条書きなどが勝手に設定され、整えるのに時間がかかる\nデータ分析の結果を貼り付けると、修正が面倒\nアプリケーションが重いし、長い文章を書くと強制終了する"
  },
  {
    "objectID": "presemi2024.html#なぜrを使うのか",
    "href": "presemi2024.html#なぜrを使うのか",
    "title": "2024年度 松浦プレゼミ",
    "section": "",
    "text": "Rを使う理由を、メリットとデメリットを比較しながら以下で説明します。\n\n\nデータ分析のツールとして大学で使うことが多いのはMS Excelですが，MS Excelは表計算ソフトウェアであり，統計分析を行うこともできますが，データ分析界ではほとんど使われません。データアナリストが利用しているプログラミング言語として主要なものは，Python(パイソン)，Julia(ジュリア)，そしてR(アール)です。\n\n\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\n\nぜんぶ無料\n学習しやすい・教材たくさん\n作業履歴が残る\n卒業後も使える\n大規模データもさくさく扱える。\nなんかかっこいい\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n\nいろいろインストールしたり，設定が必要\n命令文でデータを操作するのでぱっと見わかりにくい。\nR言語の文法と単語を覚えなきゃいけない\nキーボード入力が多いので，タッチタイピング必須"
  },
  {
    "objectID": "presemi2024presen.html#プレゼミとは",
    "href": "presemi2024presen.html#プレゼミとは",
    "title": "プレゼミ2024  スライド",
    "section": "プレゼミとは？",
    "text": "プレゼミとは？\n令和6年度(2024年度)の松浦プレゼミでは、データに強い経営学部生となるため、データ分析のツールとしてプログラミング言語Rを使った分析スキルの修得を目指します。"
  },
  {
    "objectID": "presemi2024presen.html#なぜrを使うのか",
    "href": "presemi2024presen.html#なぜrを使うのか",
    "title": "プレゼミ2024  スライド",
    "section": "なぜRを使うのか？",
    "text": "なぜRを使うのか？\nRを使うメリットとデメリットをまとめました。\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\nぜんぶ無料\n学習しやすい・教材たくさん\n作業履歴が残る\n卒業後も使える\n大規模データもさくさく扱える。\nなんかかっこいい\n\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\nいろいろインストールしたり，設定が必要\n命令文でデータを操作するのでぱっと見わかりにくい。\nR言語の文法と単語を覚えなきゃいけない\nキーボード入力が多いので，タッチタイピング必須"
  },
  {
    "objectID": "presemi2024presen.html#ms-excelだとダメなの",
    "href": "presemi2024presen.html#ms-excelだとダメなの",
    "title": "プレゼミ2024  スライド",
    "section": "MS Excelだとダメなの？",
    "text": "MS Excelだとダメなの？\n表計算ソフト「Excel」を使うメリットとデメリット\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\nみんな使ってるし，就職しても使いそう\n画面の表示が理解しやすい\nマウスでポチポチしているとグラフや表が作れてしまう。\n\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n有料 (在学中は無料で利用可能)\nマウスで何度もポチポチしないといけない\n過去のExcelファイルを見ても何をしたのか思い出せない\nExcelは大きなデータは扱えない\nアプリが重い、すぐ強制終了する\nグラフのデザインが悪い"
  },
  {
    "objectID": "presemi2024presen.html#なぜquartoを使うのか",
    "href": "presemi2024presen.html#なぜquartoを使うのか",
    "title": "プレゼミ2024  スライド",
    "section": "なぜQuartoを使うのか？",
    "text": "なぜQuartoを使うのか？\nQuartoを使うメリット・デメリット\n\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\nMarkdown形式で記述できるので、簡単に論文・レポートの体裁を整えられる\n文章作成とデータ分析を同じ場所で行える\n文章中にRだけでなくPythonやJuliaを組み込める\nグラフや表のデザインがきれい\nなんかかっこいい\n無料\n\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\nMarkdown記法を覚えないといけない\n入力するものと出力されるものが違う。\nビジネスで利用される場面が少ない"
  },
  {
    "objectID": "presemi2024presen.html#なぜms-wordだとダメなの",
    "href": "presemi2024presen.html#なぜms-wordだとダメなの",
    "title": "プレゼミ2024  スライド",
    "section": "なぜMS Wordだとダメなの？",
    "text": "なぜMS Wordだとダメなの？\nMS Wordを使うメリット・デメリット\n\n\n\n\n\n\n\n\n\nメリット\n\n\n\nみんな使ってるし，就職しても使いそう\n(だいたい)入力通りに印刷される\n学習のための本や情報が多い\nもともとパソコンに入っていたりする\n日本語チェックができる\n\n\n\n\n\n\n\n\n\n\n\n\nデメリット\n\n\n\n有料 (在学中は無料で利用可能)\n箇条書きなどが勝手に設定され、整えるのに時間がかかる\nデータ分析の結果を貼り付けると、修正が面倒\nアプリケーションが重いし、長い文章を書くと強制終了する"
  },
  {
    "objectID": "presemi2024presen.html#rでどんなことができる",
    "href": "presemi2024presen.html#rでどんなことができる",
    "title": "2024年度 松浦プレゼミ",
    "section": "Rでどんなことができる？",
    "text": "Rでどんなことができる？\n1. 楽にデータ操作ができる\nExcelでは扱えないかなり大きなデータでも簡単にデータ操作ができます。 たとえば、データ分析の練習用データとして有名なirisデータをいろいろ操作してみましょう。 irisは「あやめ」という花の花びらとがく片の長さと幅の4項目と3種類のあやめの分類名の1項目の合計5項目が150件収録されているデータベースです。Rには練習用に最初から入っているので、head()関数を使ってirisの先頭の6行を読み込んでみます。\n\nhead(iris) # 最初の6行だけ\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nこのように、Sepal.Length、Sepal.Width、Petal.Length、Petal.Width、Speciesという5つの項目が入っていることが分かります。Sepalは花びらで、Petalはがく片です。まず花びらの長さSepal.Lengthの平均を求めてみましょう。平均を返す関数はmean()です。\n\nmean(iris$Sepal.Length)\n\n[1] 5.843333\n\n\nあやめの花びらの長さの平均は、5.8433333であることが分かりました。簡単ですね。 では次に，あやめの花びらの長さの標準偏差を求めてみましょう。標準偏差を返す関数はsd()です。 下のボックスの緑の三角ボタンを押すと，Rコードが実行され，下に結果が表示されます。 sd()で標準偏差，max()で最大値，min()で最小値，median()で中央値を求めることができるので，sdのところを書き換えて実行し，結果を確認してみてください。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n次に、あやめの種類を表すSpeciesにはどんな種類があるのか見てみましょう。 Speciesに入っている種類を確認するには、table()関数を使ってみます。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nあやめの種類には、setosa、versicolor, virginicaがあり、それぞれ50個のデータがあることが分かります。\n次に、このirisを使って、グラフを作ってみます。\n2. キレイなグラフが書ける。\nでは次にグラフを作成してみます。 最初に、花びらの長さのヒストグラムを書いてみます。 さくっとヒストグラムを作るには，基本関数のhist()を使います。 ここでは，irisデータのSepal.Lengthを使ってヒストグラムを作成してみましょう。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nRはグラフ作成が得意なプログラミング言語です。 その機能を最大限活用するために，非常に簡単かつ分かりやすく美しいグラフを作成できるggplot2パッケージを導入します。\n\n# install.packages(\"ggplot2\") # 1回だけ実行\nlibrary(ggplot2)\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram()\nprint(g)\n\n\n\n\n\n\n\n\nヒストグラムの階級幅を変更したり、棒の数を変更するには、geom_histogram()の中で指定します。 例えば、階級幅を\\(0.5\\)でヒストグラムを作る場合は、binwidth = 0.5のように指定します。\n\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram(binwidth = 0.5)\nprint(g)\n\n\n\n\n\n\n\n\nグラフが黒くて見づらいので、デザインをいじってみます。 geom_histogram()関数の中で、線を黒、中を薄青色に指定します。\n\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram(color=\"black\", fill=\"lightblue\",binwidth = .5)\nprint(g)\n\n\n\n\n\n\n\n\n背景が地味なので、グラフを雑誌Economist風にしてみます。\n\ng + theme_economist_white() + scale_colour_economist()\n\n\n\n\n\n\n\n\n次は花びらの長さと幅の散布図を書いてみます。 ggplot2で散布図を書くためには、aes()で\\(x\\)軸と\\(y\\)軸を指定し、geom_point()で散布図を指定する。\n\nggplot(iris) + aes(x = Sepal.Length, y = Sepal.Width) +\n geom_point() + theme_economist()\n\n\n\n\n\n\n\n\nカテゴリーを表す変数をgroupとcolourで指定すると、カテゴリーごとにグループ化して、色分けもしてくれます。ここでは花の種類を表す変数であるSpeciesごとに色分けしてみます。\n\ng &lt;- ggplot(iris) + # データセットirisを指定\n  aes(x = Sepal.Length, # x軸 花びらの幅\n      y = Sepal.Width, # y軸　花びらの幅\n      color = Species # あやめの種類ごとに色分け\n      ) +\n      geom_point() + # 散布図を指定\n      theme_economist() # テーマをEconomistに\nprint(g)\n\n\n\n\n\n\n\n\n操作できるグラフも作れます。 plotlyパッケージを使えば簡単です。\n\nlibrary(plotly)\nggplotly(g)\n\n\n\n\n\n3. レポート・論文が作れる。\nデータを分析した結果を表や図としてレポートや論文に載せる場合、MS Excelで作成した図や表を、MS Wordにコピペしてませんか？ その場合、Wordで書いてたレポートの図表に少し修正を加えることになると、またExcelを開いて修正し、またコピペしたりしてませんか？ これはミスの元ですし、レポートを2週間後に読んだとして、その図表を作成したExcelがどこにあるのか、またどうやって作ったのか思い出せますか？ Rなら心配いりません。\nQuartoやRmarkdownを使ってMarkdownでレポートを書けば、文章作成と図表を同じ場所で作成できます。 ちなみに、このウェブサイトもQuartoを使って作成し、GitHubでウェブサイト公開してます。 さらにスライド資料も簡単に作れます。\n例えば、先ほどから使っているirisデータで、\n\n「あやめ」の種類ごとに、\n花びらの長さと幅の平均、中央値、標準偏差を計算し、\nそれを表にする，\n\nという処理を行いたいとしましょう。 簡単です。Rならね。\n\niris %&gt;%\n  dplyr::group_by(Species) %&gt;% # あやめの種類ごとに\n  dplyr::summarise( # 以下の統計量を計算\n    花びらの長さの平均 = mean(Sepal.Length),\n    花びらの幅の平均 = mean(Sepal.Width),\n    花びらの標準偏差 = sd(Sepal.Width)\n  ) %&gt;%\n  knitr::kable(booktabs = TRUE)\n\n\n\n\nSpecies\n花びらの長さの平均\n花びらの幅の平均\n花びらの標準偏差\n\n\n\n\nsetosa\n5.006\n3.428\n0.3790644\n\n\nversicolor\n5.936\n2.770\n0.3137983\n\n\nvirginica\n6.588\n2.974\n0.3224966\n\n\n\n\n\nたとえば、あやめのがく片の長さが長いほど、花びらが長くなるかどうかを分析しようと回帰分析を行いたいとします。 つまり以下のような回帰モデルを考えます（数式もこんなにキレイに書けます）。 \\[\nSepal.Length = \\alpha + \\beta \\times Petal.Length + \\varepsilon\n\\]\nこの回帰モデルを最小二乗法(Ordinary Least Square Methos)で推定した結果を表にするときも次のように書けばできます。\n\nlibrary(gtsummary)\nlm_fit &lt;- lm(Sepal.Length ~ Petal.Length, data = iris)\ntbl_regression(lm_fit,\n               type = \"html\",\n               title = \"Regression Results\",\n               exponentiate = FALSE,\n               digits = list(all_continuous() ~ 2),\n               add_estimate_to_reference_rows = TRUE,\n               bold_p = TRUE)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\nPetal.Length\n0.41\n0.37, 0.45\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n他にもこんな感じにできます。\n\nlibrary(kableExtra)\nlibrary(broom)\nlm_fit %&gt;%\n  tidy() %&gt;%\n  kable(\n      caption = \"Regression Results\",\n      booktabs = TRUE,\n      digits = c(2, 2, 2, 2)) %&gt;%\n  kable_styling(full_width = FALSE) %&gt;%\n  column_spec(1, bold = TRUE) %&gt;%\n  row_spec(0, bold = TRUE, color = \"white\", background = \"#0073C2\")\n\n\nRegression Results\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n4.31\n0.08\n54.94\n0\n\n\nPetal.Length\n0.41\n0.02\n21.65\n0\n\n\n\n\n\n\n\nあやめのがく片の長さと花びらが長さをグラフにし，そこに上で求めた回帰直線を引いてみます。\n\nggplot(iris, aes(x = Petal.Length, y = Sepal.Length)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_economist_white()\n\n\n\n\n\n\n\n\n上記の結果から，がく片が1センチ長くなると，花びらの長さが約4.1ミリ長くなることがわかります。 このように、Rを使えば、データの操作から分析、結果の表や図の作成まで、一連の作業を一カ所で行うことができます。"
  },
  {
    "objectID": "presemi2024presen.html#まとめ",
    "href": "presemi2024presen.html#まとめ",
    "title": "プレゼミ2024  スライド",
    "section": "まとめ",
    "text": "まとめ\nつまり、経営学の知識、統計学の知識、それにRの知識を組み合わせれば、経営学で学んだ理論を使って仮説を考え、その仮説を検証するために必要なデータを集め、適切な統計分析手法を使い、その結果をまとめてレポート・論文にする一連のプロセスを、一カ所にまとめることができます。 さあ、Rを勉強して、統計分析と効率的なレポート・論文作成のスキルを身につけましょう。"
  },
  {
    "objectID": "presemi2024presen.html#楽にデータ操作ができる",
    "href": "presemi2024presen.html#楽にデータ操作ができる",
    "title": "プレゼミ2024  スライド",
    "section": "1. 楽にデータ操作ができる",
    "text": "1. 楽にデータ操作ができる\n\nRはデータ分析のためのプログラミング言語で、データを扱うためのパッケージが豊富に揃っています。\nExcelでは扱えないかなり大きなデータでも簡単にデータ操作ができます。\n分析のプロセスをソースコードに残すことができるので、再現可能性が高いです。"
  },
  {
    "objectID": "presemi2024presen.html#キレイなグラフが書ける",
    "href": "presemi2024presen.html#キレイなグラフが書ける",
    "title": "プレゼミ2024  スライド",
    "section": "2. キレイなグラフが書ける。",
    "text": "2. キレイなグラフが書ける。\n次にRが得意とするグラフ作成を行います。 最初に、花びらの長さのヒストグラムを書いてみます。 さくっとヒストグラムを作るには，基本関数のhist()を使います。 irisデータのSepal.Lengthを使ってヒストグラムを作成してみましょう。\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "presemi2024presen.html#分析スキル",
    "href": "presemi2024presen.html#分析スキル",
    "title": "プレゼミ2024  スライド",
    "section": "分析スキル",
    "text": "分析スキル\nプレゼミでは、\n\n株価データ\n会計データ\nPOSデータ\n\nといったデータベース以外にも、自分で集めたアンケートのデータなど、様々なデータを分析します。 数値データだけでなく、文書データを分析するスキルは会計・ファイナンスだけでなく、組織、戦略、マーケティングと様々な分野で役立ちます。"
  },
  {
    "objectID": "presemi2024presen.html#資料作成",
    "href": "presemi2024presen.html#資料作成",
    "title": "プレゼミ2024  スライド",
    "section": "資料作成",
    "text": "資料作成\n\n分析した結果をレポートにまとめることも重要です。\n分析の再現可能性を高めるための有用なツールとして、Quartoを使います。\nQuarto(クアルト)とは、Markdown記法で書かれた文章の中に、RだけでなくPythonなど他の言語も組み込める便利なツールです。"
  },
  {
    "objectID": "presemi2024presen.html#練習用データiris",
    "href": "presemi2024presen.html#練習用データiris",
    "title": "プレゼミ2024  スライド",
    "section": "練習用データiris",
    "text": "練習用データiris\nデータ分析の練習用データとして有名なirisデータをいろいろ操作してみましょう。 irisは「あやめ」という花の花びらとがく片の長さと幅、あやめの分類名の合計5項目が150件収録されているデータベースです。head()関数を使ってirisの先頭の6行を読み込んでみます。\n\nhead(iris) # 最初の6行だけ\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa"
  },
  {
    "objectID": "presemi2024presen.html#平均を計算する",
    "href": "presemi2024presen.html#平均を計算する",
    "title": "プレゼミ2024  スライド",
    "section": "平均を計算する。",
    "text": "平均を計算する。\nSepal.Length、Sepal.Width、Petal.Length、Petal.Width、Speciesという5つの項目が入っていることが分かります。Sepalは花びらで、Petalはがく片です。まず花びらの長さSepal.Lengthの平均を求めてみましょう。平均を返す関数はmean()です。\n\nmean(iris$Sepal.Length)\n\n[1] 5.843333\n\n\nあやめの花びらの長さの平均は、5.8433333であることが分かりました。簡単ですね。"
  },
  {
    "objectID": "presemi2024presen.html#もっとキレイなグラフを書く",
    "href": "presemi2024presen.html#もっとキレイなグラフを書く",
    "title": "プレゼミ2024  スライド",
    "section": "もっとキレイなグラフを書く。",
    "text": "もっとキレイなグラフを書く。\n非常に簡単かつ分かりやすく美しいグラフを作成できるggplot2パッケージを使ってグラフを作成します。library(ggplot2)を実行して、ggplot2パッケージを読み込みます。\n\n# install.packages(\"ggplot2\") # 1回だけ実行\nlibrary(ggplot2)"
  },
  {
    "objectID": "presemi2024presen.html#グラフをカスタマイズする",
    "href": "presemi2024presen.html#グラフをカスタマイズする",
    "title": "プレゼミ2024  スライド",
    "section": "グラフをカスタマイズする。",
    "text": "グラフをカスタマイズする。\nヒストグラムの階級幅を変更したり、棒の数を変更するには、geom_histogram()の中で指定します。 例えば、階級幅を0.5でヒストグラムを作る場合は、binwidth = 0.5のように指定します。\n\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram(binwidth = 0.5)\nprint(g)"
  },
  {
    "objectID": "presemi2024presen.html#グラフのデザインを変更する",
    "href": "presemi2024presen.html#グラフのデザインを変更する",
    "title": "プレゼミ2024  スライド",
    "section": "グラフのデザインを変更する。",
    "text": "グラフのデザインを変更する。\nグラフが黒くて見づらいので、デザインをいじってみます。 geom_histogram()関数の中で、線を黒、中を薄青色に指定します。\n\ng &lt;- ggplot(iris) + aes(Sepal.Length) +\n geom_histogram(color=\"black\", fill=\"lightblue\",binwidth = .5)\nprint(g)"
  },
  {
    "objectID": "presemi2024presen.html#グラフのテーマを変える",
    "href": "presemi2024presen.html#グラフのテーマを変える",
    "title": "プレゼミ2024  スライド",
    "section": "グラフのテーマを変える。",
    "text": "グラフのテーマを変える。\n背景が地味なので、グラフを雑誌Economist風にしてみます。\n\ng + theme_economist_white() + scale_colour_economist()"
  },
  {
    "objectID": "presemi2024presen.html#変数の散布図を書く",
    "href": "presemi2024presen.html#変数の散布図を書く",
    "title": "プレゼミ2024  スライド",
    "section": "2変数の散布図を書く。",
    "text": "2変数の散布図を書く。\n次は花びらの長さと幅の散布図を書いてみます。 ggplot2で散布図を書くためには、aes()でx軸とy軸を指定し、geom_point()で散布図を指定する。\n\nggplot(iris) + aes(x = Sepal.Length, y = Sepal.Width) +\n geom_point() + theme_economist()"
  },
  {
    "objectID": "presemi2024presen.html#色分けを簡単",
    "href": "presemi2024presen.html#色分けを簡単",
    "title": "プレゼミ2024  スライド",
    "section": "色分けを簡単",
    "text": "色分けを簡単\nカテゴリーを表す変数をgroupとcolourで指定すると、カテゴリーごとにグループ化して、色分けもしてくれます。ここでは花の種類を表す変数であるSpeciesごとに色分けしてみます。\n\ng &lt;- ggplot(iris) + # データセットirisを指定\n  aes(x = Sepal.Length, # x軸 花びらの幅\n      y = Sepal.Width, # y軸　花びらの幅\n      color = Species # あやめの種類ごとに色分け\n      ) +\n      geom_point() + # 散布図を指定\n      theme_economist() # テーマをEconomistに\nprint(g)"
  },
  {
    "objectID": "presemi2024presen.html#インタラクティブなグラフも簡単",
    "href": "presemi2024presen.html#インタラクティブなグラフも簡単",
    "title": "プレゼミ2024  スライド",
    "section": "インタラクティブなグラフも簡単",
    "text": "インタラクティブなグラフも簡単\n操作できるグラフも作れます。 plotlyパッケージを使えば簡単です。\n\nlibrary(plotly)\nggplotly(g)"
  },
  {
    "objectID": "presemi2024presen.html#レポート論文が作れる",
    "href": "presemi2024presen.html#レポート論文が作れる",
    "title": "プレゼミ2024  スライド",
    "section": "3. レポート・論文が作れる。",
    "text": "3. レポート・論文が作れる。\n\nデータを分析した結果を表や図としてレポートや論文に載せる場合、MS Excelで作成した図や表を、MS Wordにコピペしてませんか？\nその場合、Wordで書いてたレポートの図表に少し修正を加えることになると、またExcelを開いて修正し、またコピペしたりしてませんか？\nレポートを2週間後に読んだとして、その図表を作成したExcelがどこにあるのか、またどうやって作ったのか思い出せますか？\n\nRとQuartoなら心配いりません。"
  },
  {
    "objectID": "presemi2024presen.html#quartoで資料作成",
    "href": "presemi2024presen.html#quartoで資料作成",
    "title": "プレゼミ2024  スライド",
    "section": "Quartoで資料作成",
    "text": "Quartoで資料作成\n\nQuartoやRmarkdownを使ってMarkdownでレポートを書けば、文章作成と図表を同じ場所で作成できます。\nこのスライド資料もQuartoを使って作成し、GitHubで公開してます。"
  },
  {
    "objectID": "presemi2024presen.html#複数の処理を実行",
    "href": "presemi2024presen.html#複数の処理を実行",
    "title": "プレゼミ2024  スライド",
    "section": "複数の処理を実行",
    "text": "複数の処理を実行\n例えば、先ほどから使っているirisデータで、\n\n「あやめ」の種類ごとに、\n花びらの長さと幅の平均、中央値、標準偏差を計算し、\nそれを表にする，\n\nという処理を行いたいとしましょう。"
  },
  {
    "objectID": "presemi2024presen.html#dplyrパッケージで実装",
    "href": "presemi2024presen.html#dplyrパッケージで実装",
    "title": "プレゼミ2024  スライド",
    "section": "dplyrパッケージで実装",
    "text": "dplyrパッケージで実装\n簡単です。Rならね。\n\nソースコード結果\n\n\n\niris %&gt;%\n  dplyr::group_by(Species) %&gt;% # あやめの種類ごとに\n  dplyr::summarise( # 以下の統計量を計算\n    花びらの長さの平均 = mean(Sepal.Length),\n    花びらの幅の平均 = mean(Sepal.Width),\n    花びらの標準偏差 = sd(Sepal.Width)\n  ) %&gt;%\n  knitr::kable(booktabs = TRUE)\n\n\n\n\n\n\n\n\nSpecies\n花びらの長さの平均\n花びらの幅の平均\n花びらの標準偏差\n\n\n\n\nsetosa\n5.006\n3.428\n0.3790644\n\n\nversicolor\n5.936\n2.770\n0.3137983\n\n\nvirginica\n6.588\n2.974\n0.3224966"
  },
  {
    "objectID": "presemi2024presen.html#回帰分析も簡単",
    "href": "presemi2024presen.html#回帰分析も簡単",
    "title": "プレゼミ2024  スライド",
    "section": "回帰分析も簡単",
    "text": "回帰分析も簡単\nたとえば、あやめのがく片の長さが長いほど、花びらが長くなるかどうかを分析しようと回帰分析を行いたいとします。 つまり以下のような回帰モデルを考えます（数式もこんなにキレイに書けます）。 \nSepal.Length = \\alpha + \\beta \\times Petal.Length + \\varepsilon"
  },
  {
    "objectID": "presemi2024presen.html#回帰分析も簡単-1",
    "href": "presemi2024presen.html#回帰分析も簡単-1",
    "title": "プレゼミ2024  スライド",
    "section": "回帰分析も簡単",
    "text": "回帰分析も簡単\nこの回帰モデルを最小二乗法で推定した結果を表にしてみます。\n\nソースコード出力結果\n\n\n\nlibrary(gtsummary)\nlm_fit &lt;- lm(Sepal.Length ~ Petal.Length, data = iris)\ntbl_regression(lm_fit,\n               type = \"html\",\n               title = \"Regression Results\",\n               exponentiate = FALSE,\n               digits = list(all_continuous() ~ 2),\n               add_estimate_to_reference_rows = TRUE,\n               bold_p = TRUE)\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\nPetal.Length\n0.41\n0.37, 0.45\n&lt;0.001\n\n\n\n1 CI = Confidence Interval"
  },
  {
    "objectID": "presemi2024presen.html#結果の作表も簡単",
    "href": "presemi2024presen.html#結果の作表も簡単",
    "title": "プレゼミ2024  スライド",
    "section": "結果の作表も簡単",
    "text": "結果の作表も簡単\n他にもこんな感じにできます。\n\nソースコード出力結果\n\n\n\nlibrary(kableExtra)\nlibrary(broom)\nlm_fit %&gt;%\n  tidy() %&gt;%\n  kable(\n      caption = \"Regression Results\",\n      booktabs = TRUE,\n      digits = c(2, 2, 2, 2)) %&gt;%\n  kable_styling(full_width = FALSE) %&gt;%\n  column_spec(1, bold = TRUE) %&gt;%\n  row_spec(0, bold = TRUE, color = \"white\", background = \"#0073C2\")\n\n\n\n\n\n\nRegression Results\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n4.31\n0.08\n54.94\n0\n\n\nPetal.Length\n0.41\n0.02\n21.65\n0"
  },
  {
    "objectID": "presemi2024presen.html#回帰直線も簡単",
    "href": "presemi2024presen.html#回帰直線も簡単",
    "title": "プレゼミ2024  スライド",
    "section": "回帰直線も簡単",
    "text": "回帰直線も簡単\nあやめのがく片の長さと花びらが長さをグラフにし，そこに上で求めた回帰直線を引いてみます。\n\nソースコード出力結果\n\n\n\nggplot(iris, aes(x = Petal.Length, y = Sepal.Length)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_economist_white()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nこのように、Rを使えば、データの操作から分析、結果の表や図の作成まで、一連の作業を一カ所で行うことができます。"
  },
  {
    "objectID": "presemi2024presen.html#色分けを簡単-output",
    "href": "presemi2024presen.html#色分けを簡単-output",
    "title": "プレゼミ2024  スライド",
    "section": "色分けを簡単",
    "text": "色分けを簡単"
  },
  {
    "objectID": "presemi2024presen.html#インタラクティブなグラフも簡単-output",
    "href": "presemi2024presen.html#インタラクティブなグラフも簡単-output",
    "title": "プレゼミ2024  スライド",
    "section": "インタラクティブなグラフも簡単",
    "text": "インタラクティブなグラフも簡単"
  }
]